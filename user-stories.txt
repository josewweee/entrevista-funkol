Desarrollar una app mobile que permita a los usuarios explorar y comprar productos de
Google, Apple y Samsung.
La aplicaci√≥n ofrecer√° una interfaz moderna y fluida con una experiencia de usuario
intuitiva.
Dise√±o figma:
https://www.figma.com/design/xHHg0Pvyfe2qoMj10mar6S/Challenge?node-id=0-
1&t=ieFQs0vu9JIoLM82-1

üìñ Historias de Usuario
1. Autenticaci√≥n con Google SSO
ID: U001
T√≠tulo: Iniciar sesi√≥n con Google
Descripci√≥n: Como usuario, quiero poder iniciar sesi√≥n con mi cuenta de Google para que
mis datos personales se autocompleten y pueda comprar de forma r√°pida.
Criterios de Aceptaci√≥n:
‚úî El usuario puede hacer clic en "Iniciar sesi√≥n con Google".
‚úî Se obtiene autom√°ticamente su nombre y correo.
‚úî Si la sesi√≥n ya est√° iniciada, el usuario es redirigido autom√°ticamente a la lista de
productos.
‚úî El usuario puede cerrar sesi√≥n cuando lo desee.

2. Gesti√≥n de Usuarios en Backend.
ID: U002
T√≠tulo: Almacenar y gestionar usuarios en Base de datos
Descripci√≥n: Como desarrollador, quiero que la informaci√≥n de los usuarios se almacene
en BD para futuras compras y personalizaci√≥n.
Criterios de Aceptaci√≥n:
‚úî Si el usuario inicia sesi√≥n por primera vez, su nombre, email y fecha de registro se
almacenan en BD.
‚úî Si ya existe en la base de datos, solo se actualiza la fecha de √∫ltimo acceso.
‚úî La informaci√≥n del usuario debe poder recuperarse en cada sesi√≥n.

3. Explorar Productos por Marca
ID: U003
T√≠tulo: Filtrar productos por marca
Descripci√≥n: Como usuario, quiero poder filtrar productos por marca (Google, Apple o
Samsung) para encontrar m√°s f√°cilmente lo que me interesa.
Criterios de Aceptaci√≥n:
‚úî Se muestra una lista de productos con im√°genes, nombres y precios.
‚úî Hay una barra de filtro con opciones para seleccionar solo una marca.
‚úî Al seleccionar una marca, la lista se actualiza mostrando solo los productos de esa
marca.
‚úî Si no se selecciona ninguna marca, se muestran todos los productos.
‚úî Los productos se almacenan en BD en una colecci√≥n llamada products.
‚úî La app obtiene la lista de productos al iniciar la aplicaci√≥n mediante una API.

4. Ver Detalles del Producto
ID: U004
T√≠tulo: Visualizar informaci√≥n de un producto
Descripci√≥n: Como usuario, quiero poder ver una descripci√≥n detallada de un producto,
incluyendo su imagen ampliada y precio, para decidir si quiero comprarlo.
Criterios de Aceptaci√≥n:
‚úî Al hacer clic en un producto, se abre una nueva pantalla con detalles.
‚úî Se muestra una imagen grande del producto.
‚úî Se incluye una descripci√≥n completa.
‚úî Hay un bot√≥n de "Comprar ahora" visible en la pantalla.
‚úî Al hacer clic en un producto, se debe obtener la informaci√≥n m√°s reciente desde el
backend/BD para asegurarme de que los datos son correctos.
‚úî Se obtiene la informaci√≥n detallada (nombre, imagen, precio, descripci√≥n).
‚úî Si no hay conexi√≥n, se muestra la √∫ltima versi√≥n almacenada en cach√©.

5. Guardar y Consultar Pedidos
ID: U005
T√≠tulo: Historial de compras
Descripci√≥n: Como usuario, quiero poder ver el historial de mis compras para revisar mis
pedidos anteriores.
Criterios de Aceptaci√≥n:
‚úî Al completar un pago, se guarda un registro del pedido en BD.
‚úî Dise√±ar la vista que permita consultar el historial en una pantalla dedicada.
‚úî Cada pedido debe incluir producto, precio, fecha pedido.

6. Despliegue del Backend en Google Cloud
ID: U006
T√≠tulo: Implementar el backend en Google Cloud Run
Descripci√≥n: Como desarrollador, quiero desplegar el backend en Google Cloud Run para
escalar autom√°ticamente y asegurar alta disponibilidad.
Criterios de Aceptaci√≥n:
‚úî El backend se desarrolla en Node.js + Express.
‚úî Se conecta a base de datos. Ej: Firestore para obtener productos y gestionar pedidos.
‚úî La API debe estar protegida con alg√∫n m√©todo de autenticaci√≥n, EJ: tokens JWT.

7. Implementaci√≥n del Frontend en Firebase Hosting
ID: U007
T√≠tulo: Desplegar la aplicaci√≥n en Firebase Hosting
Descripci√≥n: Como desarrollador, quiero que la app m√≥vil se conecte a Firebase Hosting
para una distribuci√≥n eficiente y segura.


Criterios de Aceptaci√≥n:
‚úî Utilizar alg√∫n Framework de preferencia que tenga bases Angular, entre otros
en HTML y CSS, como React,
‚úî Se conecta al backend desplegado en Cloud Run.
‚úî Firebase Hosting almacena archivos est√°ticos y sirve la app con HTTPS.
üéØ Requisitos Generales
La aplicaci√≥n debe seguir un Modelo-Vista-Controlador (MVC), asegurando una
separaci√≥n clara entre la interfaz de usuario, la l√≥gica de negocio y el acceso a datos.
‚Ä¢ Frontend (Vista) ‚Üí Aplicaci√≥n m√≥vil
‚Ä¢ Backend APIs (Controlador) ‚Üí Servidor en Node.js + Express desplegado en
Google Cloud Run
‚Ä¢ Base de Datos (Modelo) ‚Üí Almacenamiento de productos, usuarios y pedidos
Adicionalmente:
‚Ä¢ Datos 100% din√°micos: Todos los productos, precios y usuarios se obtienen de la
base de datos.
‚Ä¢ Uso de la capa gratuita de Google Cloud: La aplicaci√≥n utilizar√° exclusivamente
servicios que est√©n dentro del Google Cloud Free Tier, asegurando cero costos
iniciales durante el desarrollo y pruebas.